# version: '2.4'
# versions no longer needed for compose CLI use (as of 2020)
# If using swarm, you'll still need version 3.9

services:

  node:
    build:
      context: .
      args:
        - NODE_ENV=development
    # you can use legacy debug config or new inspect
    # NOTE: if nodemon isn't restarting on changes, you might be on Windows
    # which has trouble seeing file changes, so add -L to use legacy polling
    # https://github.com/remy/nodemon#application-isnt-restarting
    #command: ../node_modules/.bin/nodemon --debug=0.0.0.0:5858
    command:
      - /bin/sh
      - -c
      - |
        ../node_modules/typescript/bin/tsc -p .
        ../node_modules/.bin/nodemon --inspect=0.0.0.0:8080 ./bin/www
    ports:
      - "80:80"
      - "8080:8080"
      - "9229:9229"
      - "9230:9230"
    volumes:
      - .:/opt/node_app/app
      # bind-mounting these two files in will let you add packages during development without rebuilding
      # for example, to add bower to your app while developing, just install it inside the container
      # and then nodemon will restart. Your changes will last until you "docker compose down" and will
      # be saved on host for next build.
      # remember to install from the parent directory to the code bind-mount:
      # docker compose exec -w /opt/node_app node npm install --save bower
      - ./package.json:/opt/node_app/package.json
      # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # this will overwrite the default node_modules dir in container so it won't conflict with our
      # /opt/node_app/node_modules location. Thanks to PR from @brnluiz
      - notused:/opt/node_app/app/node_modules
    environment:
      - NODE_ENV=development
      - PGADMIN_DEFAULT_EMAIL="root@email.com"
      - PGADMIN_DEFAULT_PASSWORD="copa2022!"
    links:
      - "postgres:postgresdb"
    depends_on:
      - postgres
    healthcheck:
      disable: true
    networks:
      - node-with-postgres

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "root@email.com"
      PGADMIN_DEFAULT_PASSWORD: "copa2022!"
    ports:
      - "8008:80"
    depends_on:
      - postgres
    networks:
      - node-with-postgres
    links:
      - "postgres:postgresdb"

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: "copa2022!"
      POSTGRES_USER: "root"
    ports:
      - "5432:5432"
    networks:
      - node-with-postgres

volumes:
  notused:

networks: 
  node-with-postgres:
    driver: bridge
